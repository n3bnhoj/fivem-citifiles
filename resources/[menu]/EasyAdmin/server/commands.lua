RegisterCommand("ea_addShortcut", function(source, args, rawCommand)
	if args[2] and DoesPlayerHavePermission(source, "server.shortcut.add") then
		local shortcut = args[1]
		local text = table.concat(args, " ", 2)
		
		PrintDebugMessage("added '"..shortcut.." -> "..text.."' as a shortcut", 3)
		MessageShortcuts[shortcut] = text
		
		for i,_ in pairs(OnlineAdmins) do 
			TriggerLatentClientEvent("EasyAdmin:fillShortcuts", i, 10000, MessageShortcuts)
		end
	end
end)

RegisterCommand("ea_addReminder", function(source, args, rawCommand)
	if args[1] and DoesPlayerHavePermission(source, "server.reminder.add") then
		local text = string.gsub(rawCommand, "ea_addReminder ", "")
		local text = string.gsub(text, '"', '')
		
		PrintDebugMessage("added '"..text.."' as a Chat Reminder", 3)
		table.insert(ChatReminders, text)
	end
end, false)

RegisterCommand("ea_printIdentifiers", function(source,args,rawCommand)
	if source == 0 and args[1] then -- only let Console run this command
		local id = tonumber(args[1])
		print(json.encode(CachedPlayers[id].identifiers)) -- puke all identifiers into console
	end
end,false)

Citizen.CreateThread(function()
	RegisterCommand("ea_generateSupportFile", function(source, args, rawCommand)
		if DoesPlayerHavePermission(source, "server") then
			print("Creating Support File....^7\n")
			
			local supportData = {}
			
			print("Collecting EasyAdmin Config....^7\n")
			
			local version,ismaster = GetVersion()
			supportData.config = {
				gamename = GetConvar("gamename", "not-rdr3"),
				version = version,
				ismaster = tostring(ismaster),
				ea_moderationNotification = GetConvar("ea_moderationNotification", "false"),
				ea_screenshoturl = GetConvar("ea_screenshoturl", 'https://wew.wtf/upload.php'),
				onesync = GetConvar("onesync", "off"),
				steam_webApiKey = GetConvar("steam_webApiKey", ""),
				ea_LanguageName = GetConvar("ea_LanguageName", "en"),
				ea_enableDebugging = GetConvar("ea_enableDebugging", "false"),
				ea_logLevel = GetConvar("ea_logLevel", 1),
				ea_minIdentifierMatches = GetConvarInt("ea_minIdentifierMatches", 2),
				ea_defaultKey = GetConvar("ea_defaultKey", "none"),
				ea_alwaysShowButtons = GetConvar("ea_alwaysShowButtons", "false"),
				ea_enableCallAdminCommand = GetConvar("ea_enableCallAdminCommand", "true"),
				ea_enableReportCommand = GetConvar("ea_enableReportCommand", "true"),
				ea_defaultMinReports = GetConvarInt("ea_defaultMinReports", 3),
				ea_MinReportPlayers = GetConvarInt("ea_MinReportPlayers", 12),
				ea_MinReportModifierEnabled = GetConvar("ea_MinReportModifierEnabled", "true"),
				ea_ReportBanTime = GetConvarInt("ea_ReportBanTime", 86400),
				ea_custombanlist = GetConvar("ea_custombanlist", "false"),
				ea_maxWarnings = GetConvarInt("ea_maxWarnings", 3),
				ea_warnAction = GetConvar("ea_warnAction", "kick"),
				ea_warningBanTime = GetConvarInt("ea_warningBanTime", 604800),
				ea_enableSplash = GetConvar("ea_enableSplash", "true"),
				ea_playerCacheExpiryTime = GetConvarInt("ea_playerCacheExpiryTime", 900),
				ea_chatReminderTime = GetConvarInt("ea_chatReminderTime", 0),
				ea_backupFrequency = GetConvarInt("ea_backupFrequency", 72),
				ea_maxBackupCount = GetConvarInt("ea_maxBackupCount", 10),
				ea_useTokenIdentifiers = GetConvar("ea_useTokenIdentifiers", "true"),
				ea_enableTelemetry = GetConvar("ea_enableTelemetry", "true"),
			}
			
			if supportData.config.steam_webApiKey ~= "" then
				supportData.config.steam_webApiKey = "CENSORED"
			end
			
			for i,v in pairs(supportData.config) do
				PrintDebugMessage(i.." = "..v, 4)
			end
			
			
			print("Collecting Server Config....^7\n")
			
			local path = GetResourcePath(GetCurrentResourceName())
			local occurance = string.find(path, "/resources", 1, true)
			local path = string.reverse(string.sub(string.reverse(path), -occurance))
			
			local blacklistedPhrases = {"mysql", "mariadb", "licensekey", "SentryIO", "mongodb", "tebex", "endpoint_add", "ac_webhook"}
			local servercfg = io.open(path.."server.cfg")
			if servercfg then
				supportData.serverconfig = "# Some lines may have been stripped for privacy, this is intentional. #\n # Generated by EasyAdmin "..GetVersion().." on "..formatDateString(os.time()).." #\n"
				line = servercfg:read("*line")
				while line do
					local addLine = true
					for i, blacklisted in pairs(blacklistedPhrases) do
						if string.find(string.lower(line), string.lower(blacklisted)) then
							addLine = false
						end
						if string.find(line, "ea_moderationNotification") then
							line = "set ea_moderationNotification 'CENSORED BY EASYADMIN'"
						elseif string.find(line, "steam_webApiKey") then 
							line = "steam_webApiKey 'CENSORED BY EASYADMIN'"
						elseif string.find(line, "ea_screenshoturl") then
							line = "ea_screenshoturl 'CENSORED BY EASYADMIN'"
						end
					end
					if addLine then
						supportData.serverconfig = supportData.serverconfig.."\n"..line
					else
						PrintDebugMessage("Skipped line "..line.." for privacy.", 4)
					end
					line = servercfg:read("*line")
				end
				servercfg:close()
			end
			
			local permissions = io.open(path.."easyadmin_permissions.cfg")
			if permissions then
				supportData.serverconfig = supportData.serverconfig.."\n#### The following are the contents of the easyadmin_permissions.cfg ####\n"..permissions:read("*a")
				permissions:close()
			end
			
			print("Collecting Banlist....^7\n")
			
			supportData.banlist = LoadResourceFile(GetCurrentResourceName(), "banlist.json")
			
			print("Collecting Players....^7\n")
			
			local players = {}
			for i, player in pairs(GetPlayers()) do
				players[player] = GetPlayerIdentifiers(player)
			end
			
			supportData.players = players
			
			print("Saving to support.json....^7\n")
			
			local saved = SaveResourceFile(GetCurrentResourceName(), "support.json", json.encode(supportData, {indent = true}), -1)
			
			if not saved then
				PrintDebugMessage("^1Saving support.json failed! Please check if EasyAdmin has Permission to write in its own folder!^7", 1)
			end
			
			
			print("Done! Please upload the support.json in "..GetResourcePath(GetCurrentResourceName()).." to the Discord!^7\n")
		end
	end, false)
	
end)

RegisterCommand("spectate", function(source, args, rawCommand)
    if(source == 0) then
        Citizen.Trace(GetLocalisedText("badidea")) -- Maybe should be it's own string saying something like "only players can do this" or something
    end
    
    PrintDebugMessage("Player "..getName(source,true).." Requested Spectate on "..getName(args[1],true), 3)
    
    if args[1] and tonumber(args[1]) and DoesPlayerHavePermission(source, "player.spectate") then
        if getName(args[1]) then
            TriggerClientEvent("EasyAdmin:requestSpectate", source, args[1])
        else
            TriggerClientEvent("EasyAdmin:showNotification", source, GetLocalisedText("playernotfound"))
        end
    end
end, false)


RegisterCommand("setgametype", function(source, args, rawCommand)
    if args[1] and DoesPlayerHavePermission(source, "server.convars") then
        PrintDebugMessage("Player "..getName(source,true).." set Gametype to "..args[1], 3)
        SetGameType(args[1])
    end
end, false)

RegisterCommand("setmapname", function(source, args, rawCommand)
    if args[1] and DoesPlayerHavePermission(source, "server.convars") then
        PrintDebugMessage("Player "..getName(source,true).." set Map Name to "..args[1], 3)
        SetMapName(args[1])
    end
end, false)

RegisterCommand("slap", function(source, args, rawCommand)
    if args[1] and args[2] and DoesPlayerHavePermission(source, "player.slap") then
        local preferredWebhook = detailNotification ~= "false" and detailNotification or moderationNotification
        SendWebhookMessage(preferredWebhook,string.format(GetLocalisedText("adminslappedplayer"), getName(source, false, true), getName(args[1], true, true), args[2]), "slap", 16711680)
        PrintDebugMessage("Player "..getName(source,true).." slapped "..getName(args[1],true).." for "..args[2].." HP", 3)
        TriggerClientEvent("EasyAdmin:SlapPlayer", args[1], args[2])
    end
end, false)	